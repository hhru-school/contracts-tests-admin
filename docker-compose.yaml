version: '2.4'

services:
  postgres:
    image: postgres:13.3
    container_name: postgres
    restart: always
    ports:
      - "5435:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "contracts_tests_db"
    volumes:
      - ./db/db.sql:/docker-entrypoint-initdb.d/db.sql
      - postgres:/var/lib/postgresql/data:delegated
  contracts-tests-admin:
    mem_limit: 1000m
    container_name: contracts-tests-admin
    build:
      context: ./app
      dockerfile: ./DockerFile
    ports:
      - "8085:8085"
    depends_on:
      - postgres
  front-admin:
    container_name: front-admin
    build:
      context: ./frontend
      dockerfile: ./DockerFile
    restart: always
    ports:
      - "3001:80"
  minio:
    image: minio/minio:RELEASE.2023-04-13T03-08-07Z
    command: server --console-address ":9001" /data/
    ports:
      - "9000:9000"
      - "9001:9001"
    env_file:
      - ./minio/resources/minio.env
    volumes:
      - minio-storage:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
  mc:
    image: minio/mc:RELEASE.2023-04-12T02-21-51Z
    depends_on:
      - minio
    container_name: mctestenv
    env_file:
      - ./minio/resources/minio.env
    volumes:
      - ./minio/resources/folder-to-upload:/app
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add testminio http://minio:9000 $${MINIO_ROOT_USER} $${MINIO_ROOT_PASSWORD};

      /usr/bin/mc mb testminio/$${MINIO_FIRST_BUCKET};

      /usr/bin/mc cp --recursive  /app/$${MINIO_FIRST_BUCKET}/* testminio/$${MINIO_FIRST_BUCKET} 

      /usr/bin/mc mb testminio/$${MINIO_SECOND_BUCKET};

      /usr/bin/mc cp --recursive  /app/$${MINIO_SECOND_BUCKET}/* testminio/$${MINIO_SECOND_BUCKET}
      "
volumes:
 postgres:
 minio-storage:
